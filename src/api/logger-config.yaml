version: 1
disable_existing_loggers: true

formatters:
    standard:
        format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    error:
        format: "%(levelname)s <PID %(process)d:%(processName)s> %(name)s.%(funcName)s(): %(message)s"

handlers:
    console:
        class: logging.StreamHandler
        level: DEBUG
        formatter: standard
        stream: ext://sys.stdout

    wsgi:
        class: logging.StreamHandler
        level: DEBUG
        formatter: standard
        stream: ext://flask.logging.wsgi_errors_stream

    info_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: INFO
        formatter: standard
        filename: !ENV ${LOGS_DIRECTORY}/info.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8

    error_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: ERROR
        formatter: error
        filename: !ENV ${LOGS_DIRECTORY}/errors.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8

    debug_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: DEBUG
        formatter: standard
        filename: !ENV ${LOGS_DIRECTORY}/debug.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8

    critical_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: CRITICAL
        formatter: standard
        filename: !ENV ${LOGS_DIRECTORY}/critical.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8

    warn_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: WARN
        formatter: standard
        filename: !ENV ${LOGS_DIRECTORY}/warn.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8

root:
    level: DEBUG
    propagate: no
    handlers: [wsgi]

loggers:
    DEBUG:
        level: DEBUG
        handlers: [debug_file_handler]
    BASIC:
        level: DEBUG
        handlers: [info_file_handler, warn_file_handler, error_file_handler]
    FAILURE:
        level: CRITICAL
        handlers: [critical_file_handler]